<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Bbs"><!--여기는 myBatis 영역 -->

	<!-- 테스트용으로 집어 넣은 것 <insert id="writeBbs" parameterType="mul.cam.food.dto.BbsDto"> 
		insert into recipe(writer, thumbnail, title, content, ingredients, cookingtime, 
		serving, category, regdate, star, tag) values(#{writer}, #{thumbnail},#{title}, 
		#{content}, #{ingredients}, #{cookingtime}, #{serving}, #{category}, now(), 
		#{star}, #{tag}) </insert> -->

	<!-- 메인홈에 평점순으로 데이터 가져오기 6개 -->
	<select id="mainHomegetBbs" resultType="mul.cam.food.dto.BbsDto">
		select thumbnail ,title,
		content,
		tag, seq
		from recipe
		order by star desc;
	</select>

	<!-- 메인홈에 최신글 데이터 가져오기 7개 -->
	<select id="recentBbs" resultType="mul.cam.food.dto.BbsDto">
		select thumbnail ,title,
		content, tag, seq
		from recipe
		order by seq desc;
	</select>

	<!--모든 글 리스트 -->
	<select id="getlist" parameterType="mul.cam.food.dto.BbsParam" resultType="mul.cam.food.dto.BbsDto" >
		select seq, writer, title, thumbnail, content, ingredients, cookingtime, serving , category, regdate, star, tag, delf
		from 
			( select row_number()over(order by regdate desc) as rnum,
				seq, writer, title, thumbnail, content, ingredients, cookingtime, serving , category, regdate, star, tag, delf
			  from recipe
			  where 1=1
			  <if test="choice != null and choice != '' and search != null and search != '' ">
			  	<if test="choice == 'title'">
			  		and title like concat('%', #{search},'%')
			  	</if>
			  	<if test="choice == 'content'">
			  		and content like concat('%', #{search},'%')
			  	</if>
			  	<if test="choice == 'writer'">
			  		and writer=#{search}
			  	</if>			  	
			  </if>
			  order by regdate desc
			) a
		where rnum between ${start} and ${end}
	
	</select>
	<!-- 검색 글 리스트 -->

	<!-- bbs wirte -->

	<insert id="bbswrite" parameterType="mul.cam.food.dto.BbsDto">

		insert into recipe(writer,
		title, thumbnail, content, ingredients,
		cookingtime, serving ,
		category, regdate, star, tag, delf)
		values(#{writer}, #{title}, #{thumbnail},
		#{content}, #{ingredients}, #{cookingtime},
		#{serving}, #{category},
		now(), #{star} , #{tag}, '3')

	</insert>

	<select id="loginAf" resultType="mul.cam.food.dto.MemberDto"
		parameterType="mul.cam.food.dto.MemberDto">

		select * from user where userId = #{userId} and
		password=#{password}

	</select>
	<!-- 게시글 상세보기 -->
	<select id="detailBbs" resultType="mul.cam.food.dto.BbsDto">
		select seq, writer, title, thumbnail, content, ingredients, cookingtime, serving , category, regdate, star, tag, delf
		from recipe
		where seq=#{seq}		
	</select>


	
	<!-- 230320 추가 -->
	<select id="getSearchList"
		parameterType="mul.cam.food.dto.BbsParam"
		resultType="mul.cam.food.dto.BbsDto">
		select *
		from recipe
		where 1=1
		<if
			test="choice != null and choice != '' and search != null and search != '' ">
			<if test="choice == 'title'">
				and title like concat('%', #{search},'%')
			</if>
			<if test="choice == 'content'">
				and content like concat('%', #{search},'%')
			</if>
			<if test="choice == 'writer'">
				and writer=#{search}
			</if>
		</if>
		order by regdate asc

	</select>

	<!-- 글의 총수 -->
	<select id="getAllBbsLen"
		parameterType="mul.cam.food.dto.BbsParam"
		resultType="java.lang.Integer">
		select ifnull(count(*),0)
		from recipe
		<if
			test="choice != null and choice != '' and search != null and search != '' ">
			<if test="choice == 'title'">
				where title like concat('%', #{search},'%')
			</if>
			<if test="choice == 'content'">
				where content like concat('%', #{search},'%')
			</if>
			<if test="choice == 'writer'">
				where writer=#{search}
			</if>
		</if>
	</select>
	
	
		<!-- 게시판 수정 -->
	<update id="updateBbs" parameterType="mul.cam.food.dto.BbsDto">
		update recipe
		set thumbnail=#{thumbnail}, title=#{title},
		 content=#{content}, ingredients=#{ingredients},
		  cookingtime=#{cookingtime}, serving=#{serving}, category=#{category}, regdate=now(), tag=#{tag}, delf=#{delf}
		where seq=#{seq}
	</update>
	
	<!-- 게시판 삭제 -->
	<update id="deleteBbs" parameterType="mul.cam.food.dto.BbsDto">
		delete
		from recipe 
		where seq=#{seq}
	</update>
	
	<!--  댓글 쓰기 -->
	<insert id="commentWrite" parameterType="mul.cam.food.dto.BbsComment">
		insert into reply(seq, content, writer)
		values(#{seq}, #{content}, #{writer})
	</insert>
	
	<!--  댓글 목록 -->
	<select id="commentList" parameterType="Integer" resultType="mul.cam.food.dto.BbsComment">
		select seq, content, writer
		from reply
		where seq=#{seq}
		</select>
	
</mapper>